{
    "collab_server" : "",
    "contents" : "# The code was written to build 4 benchmarks with 2 metrics using ITRDB datasets,\n# and visualizing the result.\n# This code can reproduce the result (Fig. 9) in the research paper :\n# 'Using the International Tree-Ring Data Bank (ITRDB) records as century-long benchmarks \n# for land-surface models'\n# \n# Author: Jina Jeong (j.jeong@vu.nl)\n\nrm(list=ls())\nlibrary(ncdf4)\nlibrary(dplR)\nlibrary(plotrix)\nlibrary(dplyr)\n\n###############################################################################################\n#######################################   Initialize   ########################################\n\nsite_list = c('brit019','brit021','finl039','finl052','fran6','germ153','germ214',\n              'neth034','spai006','swit188')\ncol.list=c('black','dodgerblue','indianred1','palegreen2','orange')\npft_list = list(brit019=4,brit021=4,finl039=4,finl052=4,fran6=4,\n                germ153=4,germ214=4,neth034=4,spai006=4,swit188=4)\nPFT_name = c('SoilBare','BroadLeavedEvergreenTropical','BroadLeavedRaingreenTropical',\n             'NeedleleafEvergreenTemperate','BroadLeavedEvergreenTemperate','BroadLeavedSummergreenTemperate',\n             'NeedleleafEvergreenBoreal','BroadLeavedSummergreenBoreal','LarixSpBoreal','C3GrassTemperate',\n             'C4GrassTemperate','C3AgricultureTemperate','C4Agriculture')\n\nsite.info=read.csv2('data/10site_info.csv')\nrownames(site.info)=site.info$site\n\nconfig_list = c('Ndyn','recru','power','basic') \ntarget_circ=5\n\nsetwd('~/surfdrive/work/J.Jeong_GMD_2020/')\n\n## Read functions \nsource('R/functions_J.R')\n\n## Load data and simulation output\n## each file is the list contains 10 site ITRDB rwl or simulated output\nload('data/obs.RData')\nfor (config in 1:length(config_list)){\n  load(paste0('output/simulation.',config_list[config],'.RData'))\n  \n}\n\n######################################## Compare trend ##################################\nvar_list=c('slope','err_slope','rmse','err_rmse')\n\ntrend_array<-array(0,dim=c(length(site_list),length(var_list),length(config_list)),\n                   dimnames = list(site_list,var_list,config_list))\n\nfor (config in config_list){\n  \n  simulation.list = get(paste0('simulation.',config))\n  data.trend = data.frame(matrix(NA,ncol=length(var_list),nrow=length(site_list))) %>%\n    `colnames<-`(var_list) %>% `rownames<-`(site_list)\n  \n  for (list in 1:length(site_list)) {\n    \n    site_name = site_list[list]\n    simulation=simulation.list[[site_name]]\n    obs_rwl=obs[[site_name]]\n    simulation=as.data.frame(simulation)\n    \n    # Leave-one-out arppoach\n    data.trend.sub = data.frame(slope = rep(NA,ncol(obs_rwl)),rmse = rep(NA,ncol(obs_rwl)))\n    for (i in c(1:ncol(obs_rwl))){\n      \n      obs_sub = obs_rwl[,-i]\n      data.obs = data.frame(t=c(1:dim(obs_sub)[1]),data= apply(obs_sub,1,tbrm))\n      data.obs = data.frame(t=c(1:dim(obs_sub)[1]),\n                            data= apply(apply(obs_sub,2,align.trw),1,tbrm))\n      data.sim = data.frame(t=c(1:nrow(simulation)),data = simulation[,target_circ])\n      sub = (data.obs - data.sim)[,2]\n      t = c(1:length(sub))\n      test = lm(sub ~ t) # linear regression\n      \n      rcs.obs = rcs(obs_sub,\n                    po = data.frame(ids = colnames(obs_sub), po = rep(1,ncol(obs_sub))),\n                    rc.out=T,make.plot=F)\n      \n      rcs.sim = rcs(simulation,\n                    po = data.frame(ids = colnames(simulation), \n                                    po = rep(1,ncol(simulation))),\n                    rc.out=T,make.plot=F)\n      \n      # calculation for Fig.9 a.\n      data.trend.sub$slope[i] = summary(test)$coefficients[2,1]\n      data.trend.sub$rmse[i] = sqrt(sum((simulation[,target_circ]-data.obs)^2,na.rm=T)/length(t))\n      \n    }\n    \n    data.trend$slope[list] <- mean(data.trend.sub$slope)\n    data.trend$err_slope[list] <- error_margin(data.trend.sub$slope,0.95)\n    data.trend$rmse[list] <- mean(data.trend.sub$rmse)\n    data.trend$err_rmse[list] <- error_margin(data.trend.sub$rmse,0.95)\n    \n  }\n  \n  trend_array[,,config]=as.matrix(data.trend)\n  \n}\n\n\n##########################################################################################\n####################### Compare diameter by CALENDAR (MATURE) ############################\n\nvar_list=c('rmse','err_rmse','slope','err_slope')\ndia_array<-array(0,dim=c(length(site_list),length(var_list),length(config_list)),\n                 dimnames = list(site_list,var_list,config_list))\n\nfor (config in 1:length(config_list)){\n  \n  config=config_list[config]\n  simulation = get(paste0('simulation.',config))\n  data.dia.calendar <- as.data.frame(matrix(NA,nrow=length(site_list),ncol=length(var_list))) %>%\n    'colnames<-'(var_list) %>% 'rownames<-'(site_list)\n  \n  for (list in 1:length(site_list)) {\n    \n    site_name = site_list[list]\n    obs_rwl=obs[[site_name]]\n    trw.sim = simulation[[site_name]]\n    \n    #Leave-one-out\n    data.dia.sub = data.frame(rmse = rep(NA,ncol(obs_rwl)),slope = rep(NA,ncol(obs_rwl)))\n    for (i in c(1:ncol(obs_rwl))){\n      obs_sub = obs_rwl[,-i]\n      \n      dia.end.obs = apply(obs_sub,2,cumsum.j)\n      dia.end.mean.obs = apply(dia.end.obs,1,mean,na.rm=T)[51:nrow(obs_sub)] #mean line\n      \n      dia.max.sim = (2*cumsum(trw.sim[,target_circ]))[51:nrow(obs_sub)] #maximum sim\n      test.dia = lm((dia.end.mean.obs-dia.max.sim)~c(1:length(c(51:nrow(obs_sub)))))\n      \n      #Fill data for Fig. 9b\n      data.dia.sub$rmse[i] = sqrt(sum((dia.end.mean.obs-dia.max.sim)^2)/length(dia.max.sim))\n      data.dia.sub$slope[i] = summary(test.dia)$coefficients[2,1]\n      \n    }\n    \n    data.dia.calendar$rmse[list] = mean(data.dia.sub$rmse)\n    data.dia.calendar$err_rmse[list] = error_margin(data.dia.sub$rmse,0.95)\n    data.dia.calendar$slope[list] = mean(data.dia.sub$slope)\n    data.dia.calendar$err_slope[list] = error_margin(data.dia.sub$slope,0.95)\n    \n  } \n  dia_array[,,config] = as.matrix(data.dia.calendar)\n}\n\n\n##########################################################################################\n######################## Compare diameter by AGE (YOUNG) #################################\n\nvar_list=c('rmse','err_rmse','slope','err_slope')\nage_array<-array(0,dim=c(length(site_list),length(var_list),length(config_list)),\n                 dimnames = list(site_list,var_list,config_list))\n\nfor (config in 1:length(config_list)){\n  \n  config=config_list[config]\n  simulation = get(paste0('simulation.',config))\n  data.dia.age = data.frame(matrix(NA,nrow=length(site_list),ncol=length(var_list))) %>%\n    `row.names<-`(site_list) %>% `colnames<-`(var_list)\n  rownames(data.dia.age) = site_list\n  \n  for (list in 1:length(site_list)) {\n    \n    site_name = site_list[list]\n    obs_rwl = obs[[site_name]]\n    trw.sim=simulation[[site_name]]\n    \n    # Leave-one-out\n    data.dia.sub = data.frame(rmse = rep(NA,ncol(obs_rwl)),slope = rep(NA,ncol(obs_rwl)))\n    for ( i in c(1:ncol(obs_rwl))){\n      obs_sub = obs_rwl[,-i]\n      \n      trw.age = apply(obs_sub,2,align.trw)\n      dia.age.obs = apply(trw.age,2,cumsum.j)\n      dia.age.mean.obs = apply(dia.age.obs,1,max,na.rm=T)[1:30]\n      dia.age.max.sim= (2*cumsum(trw.sim[,target_circ]))[1:30]\n      \n      test.age = lm((dia.age.mean.obs-dia.age.max.sim)~c(1:30))\n      # Fill data for Fig. 9c\n      data.dia.sub$slope[i] = summary(test.age)$coefficients[2,1]\n      data.dia.sub$rmse[i] = sqrt(sum((dia.age.mean.obs-dia.age.max.sim)^2)/30)\n    } \n    data.dia.age$rmse[list] = mean(data.dia.sub$rmse)\n    data.dia.age$err_rmse[list] = error_margin(data.dia.sub$rmse,0.95)\n    data.dia.age$slope[list] = mean(data.dia.sub$slope)\n    data.dia.age$err_slope[list] = error_margin(data.dia.sub$rmse,0.95)\n    \n  }\n  age_array[,,config] = as.matrix(data.dia.age)\n  \n}\n\n##########################################################################################\n################################ Extreme growths (EXTREME) ##############################\n\n# p for defining extreme growth\np=0.25\n\nvar_list=c('amp','err_amp','extr','err_extr')\nextr_array =array(dim=c(length(site_list),length(var_list),length(config_list)),\n                  dimnames=list(site_list,var_list,config_list))\n\nfor (config in config_list){\n  simulation=get(paste0('simulation.',config))\n  \n  for (site_name in site_list){\n    obs_rwl=obs[[site_name]]\n    \n    # Leave-one-out\n    extr.sub = data.frame(amp = rep(NA,ncol(obs_rwl)),extr=rep(NA,ncol(obs_rwl)))\n    for (i in c(1:ncol(obs_rwl))){\n      obs_sub = obs_rwl[,-i]\n      \n      # Choose long seriese to avoid age trends\n      obs.long=obs_sub[,which(apply(obs_sub,2,function(x) sum(is.na(x))<20)==T)]\n      obs.cut=obs.long[which(as.numeric(rownames(obs.long))>1950),]\n      obs.cut=rowMeans(obs.cut,na.rm=T)\n      \n      sim.cut=simulation[[site_name]][which(as.numeric(rownames(obs.long))>1950),target_circ]\n      names(sim.cut)<-names(obs.cut)\n      \n      ind.obs.low = order(obs.cut)[1:floor(p*length(obs.cut))]\n      ind.obs.high= rev(order(obs.cut,decreasing=T)[1:floor(p*length(obs.cut))])\n      ind.sim.low = order(sim.cut)[1:floor(p*length(sim.cut))]\n      ind.sim.high= rev(order(sim.cut,decreasing=T)[1:floor(p*length(sim.cut))])\n      \n      # Choose by extreme years\n      obs.extr = scale(obs.cut)[c(ind.obs.low,ind.obs.high),1]\n      sim.extr = scale(sim.cut)[c(ind.obs.low,ind.obs.high),1]\n      # Choose by extreme growth\n      obs.rank = obs.cut[c(ind.obs.low,ind.obs.high)]\n      sim.rank = sim.cut[c(ind.sim.low,ind.sim.high)]\n      \n      rmse.extr = sqrt(mean((sim.extr-obs.extr)^2)/length(sim.rank))\n      rmse.rank = sqrt(mean((sim.rank-obs.rank)^2)/length(sim.rank))\n      # Fill data for Fig. 9d\n      extr.sub$amp[i] = sqrt(mean((sim.rank-obs.rank)^2)/length(sim.rank))\n      extr.sub$extr[i] = sqrt(mean((sim.extr-obs.extr)^2)/length(sim.rank))\n    }\n    \n    extr_array[site_name,'amp',config]=mean(extr.sub$amp)\n    extr_array[site_name,'err_amp',config]=error_margin(extr.sub$amp,0.95)\n    extr_array[site_name,'extr',config] = mean(extr.sub$extr)\n    extr_array[site_name,'err_extr',config] = error_margin(extr.sub$extr,0.95)\n    \n  }\n}    \n\n\n##################################################################################\n################################ FIGURE_COMBIME ##################################\n\nrgb.list=col2rgb(col.list)/255\n\n## To save figure\n#png('figure/comb_benchmarks.png',width=11.5, \n#    height=9.8, units=\"in\", res=300)\nsvg('figure/comb_benchmarks.svg',width=12, height=10)\n\n##! bunch of errors can be made due to too short error bars\n\npar(mfrow=c(2,2))\npar(mar=c(5.5,4.9,2.7,2.1))\n\n\n## Trend\nfor ( i in c(1:length(config_list))){\n  config = config_list[i]\n  data=trend_array[,,config]\n  \n  if (config=='Ndyn'){\n    plot(-100,-100,\n         xlab='',\n         ylab='',\n         ylim=c(extendrange(trend_array[,'slope',],f=0.1)[1],1.5*max(trend_array[,'slope',])),\n         xlim =c(extendrange(trend_array[,'rmse',],f=0.16)[1],\n                 extendrange(trend_array[,'rmse',],f=0.08)[2]),\n         xaxt='n')\n    \n    arrows(data[,'rmse']-data[,'err_rmse'], data[,'slope'], \n           data[,'rmse']+data[,'err_rmse'], data[,'slope'], length=0.02, angle=90, code=3)\n    arrows(data[,'rmse'],data[,'slope']-data[,'err_slope'],\n           data[,'rmse'],data[,'slope']+data[,'err_slope'], length=0.02, angle=90, code=3)\n    \n    points(data[,'rmse'],data[,'slope'],pch=19)\n    axis.break(1,breakpos=extendrange(trend_array[,'rmse',],f=0.09)[1])\n    start = min(trend_array[,'rmse',])-min(trend_array[,'rmse',])%%5\n    end = max(trend_array[,'rmse',])-(max(trend_array[,'rmse',]))%%5\n    axis(1,at=seq(start,end,length.out=5),\n         label=seq(start,end,length.out=5))\n    axis(1,at=extendrange(trend_array[,'rmse',],f=0.16)[1],label=0)\n    \n    text(data[,'rmse'],data[,'slope'],pos=4,cex=1.2,label=c(1:10))\n  } else { # if config=='Ndyn'\n    arrows(data[,'rmse']-data[,'err_rmse'], data[,'slope'], \n           data[,'rmse']+data[,'err_rmse'], data[,'slope'], length=0.02, angle=90, code=3, col='azure4')\n    arrows(data[,'rmse'],data[,'slope']-data[,'err_slope'],\n           data[,'rmse'],data[,'slope']+data[,'err_slope'], length=0.02, angle=90, code=3, col='azure4')\n    \n    points(data[,'rmse'],data[,'slope'],col=col.list[i],pch=19)\n    segments(data[,'rmse'],data[,'slope'],trend_array[,'rmse',i-1],trend_array[,'slope',i-1],\n             lty=3,lwd=0.8)\n    \n  }\n  \n}\n\nmtext('RMSE between \\n simulated and observed trends (mm/yr)',1,line=3.5,cex=1.1)\nmtext('Temporal slope of the residuals \\n from tree-ring width by tree age (mm/yr)',2,line=2.2,cex=1.1)\nmtext(expression(bold('Size-related trend')),3,cex=1.2,line=0.4)\nlegend('topright',config_list,col=col.list[1:length(config_list)],pch=19,bty='n')\n\n## Mature\nfor ( i in 1:length(config_list)){\n  config=config_list[i]\n  data=dia_array[,,config]\n  cex=rep(1,length(site_list))\n  #cex[which(data[,'p_slope']>0.05)]=1.15\n  if (config=='Ndyn'){\n    plot(data[,'rmse'],data[,'slope'],pch=19,\n         xlab='',\n         ylab='',\n         ylim=extendrange(dia_array[,'slope',],f=0.08),\n         xlim = c(extendrange(dia_array[,'rmse',],f=0.12)[1],\n                  extendrange(dia_array[,'rmse',],f=0.08)[2]),\n         xaxt='n')\n    \n    arrows(data[,'rmse']-data[,'err_rmse'], data[,'slope'], \n           data[,'rmse']+data[,'err_rmse'], data[,'slope'], length=0.02, angle=90, code=3, col='azure4')\n    arrows(data[,'rmse'],data[,'slope']-data[,'err_slope'],\n           data[,'rmse'],data[,'slope']+data[,'err_slope'], length=0.02, angle=90, code=3, col='azure4')\n    points(data[,'rmse'],data[,'slope'],pch=19)\n    axis.break(1,breakpos=extendrange(dia_array[,'rmse',],f=0.08)[1])\n    start = min(dia_array[,'rmse',])-min(dia_array[,'rmse',])%%10\n    end = max(dia_array[,'rmse',])-(max(dia_array[,'rmse',]))%%10\n    axis(1,at=seq(start,end,length.out=5),\n         label=seq(start,end,length.out=5))\n    axis(1,at=extendrange(range(min(dia_array[,'rmse',]),max(dia_array[,'rmse',])),f=0.12)[1]\n         ,label=0)\n    \n    \n  } else { # if config=='Ndyn'\n    arrows(data[,'rmse']-data[,'err_rmse'], data[,'slope'], \n           data[,'rmse']+data[,'err_rmse'], data[,'slope'], length=0.02, angle=90, code=3, col='azure4')\n    arrows(data[,'rmse'],data[,'slope']-data[,'err_slope'],\n           data[,'rmse'],data[,'slope']+data[,'err_slope'], length=0.02, angle=90, code=3, col='azure4')\n    points(data[,'rmse'],data[,'slope'],col=col.list[i],pch=19)\n    segments(data[,'rmse'],data[,'slope'],dia_array[,'rmse',i-1],dia_array[,'slope',i-1],\n             lty=3,lwd=0.8)\n    \n  }\n  \n}\n\ntext(dia_array[,'rmse','Ndyn'],dia_array[,'slope','Ndyn'],pos=4,cex=1.2,label=c(1:10))\n\nmtext('RMSE between simulated and observed \\n diameter for mature trees (mm/yr)',1,line=3.5,cex=1.1)\nmtext('Temporal slope of the residuals from\n      diameter growth for matured trees (mm/yr)',2,line=2.2,cex=1.1)\nmtext(expression(bold('Mature trees')),3,cex=1.2,line=0.4)\n\n## Young\nfor ( i in 1:length(config_list)){\n  config=config_list[i]\n  data=age_array[,,config]\n  cex=rep(1,length(site_list))\n  #cex[which(data[,'p_slope']>0.05)]=1.15\n  if (config=='Ndyn'){\n    plot(data[,'rmse'],data[,'slope'],pch=19,\n         xlab='',\n         ylab='',\n         ylim=extendrange(age_array[,'slope',],f=0.08),\n         xlim = c(extendrange(age_array[,'rmse',],f=0.1)[1],\n                  extendrange(age_array[,'rmse',],f=0.1)[2]),\n         xaxt='n')\n    arrows(data[,'rmse']-data[,'err_rmse'], data[,'slope'], \n           data[,'rmse']+data[,'err_rmse'], data[,'slope'], length=0.02, angle=90, code=3, col='azure4')\n    arrows(data[,'rmse'],data[,'slope']-data[,'err_slope'],\n           data[,'rmse'],data[,'slope']+data[,'err_slope'], length=0.02, angle=90, code=3, col='azure4')\n    points(data[,'rmse'],data[,'slope'],pch=19)\n    \n    start = min(age_array[,'rmse',])-min(age_array[,'rmse',])%%10\n    end = max(age_array[,'rmse',])-(max(age_array[,'rmse',]))%%10\n    axis(1,at=seq(start,end,length.out=5),\n         label=round(seq(start,end,length.out=5)))\n    \n  } else {# if config=='Ndyn'\n    arrows(data[,'rmse']-data[,'err_rmse'], data[,'slope'], \n           data[,'rmse']+data[,'err_rmse'], data[,'slope'], length=0.02, angle=90, code=3, col='azure4')\n    arrows(data[,'rmse'],data[,'slope']-data[,'err_slope'],\n           data[,'rmse'],data[,'slope']+data[,'err_slope'], length=0.02, angle=90, code=3, col='azure4')\n    \n    points(data[,'rmse'],data[,'slope'],col=col.list[i],pch=19)\n    segments(data[,'rmse'],data[,'slope'],age_array[,'rmse',i-1],age_array[,'slope',i-1],\n             lty=3,lwd=0.8)\n    \n  }\n  \n}\ntext(age_array[,'rmse','Ndyn'],age_array[,'slope','Ndyn'],pos=4,cex=1.2,label=c(1:10))\n\nmtext('RMSE between simulated and \\n observed diameter for young trees (mm/yr)',1,line=3.5,cex=1.1)\nmtext('Temporal slope of the residuals from\n      diameter growth for young trees (mm/yr)',2,line=2.2,cex=1.1)\nmtext(expression(bold('Young trees')),3,cex=1.2,line=0.4)\n\n\n## Extreme\nplot(-1,-1,col='white',xlab='',ylab='',\n     ylim=extendrange(extr_array[,'amp',],f=0.08),\n     xlim = c(0,extendrange(extr_array[,'extr',],f=0.1)[2]),\n     xaxt='n')\n\nstart = 0\nend = max(extr_array[,'extr',])-max(extr_array[,'extr',])%%0.05\naxis(1,at=seq(start,end,length.out=5),\n     label=seq(start,end,length.out=5))\n\nfor(i in c(1:length(config_list))){\n  config=config_list[i]\n  \n  arrows(extr_array[,'extr',config]-extr_array[,'err_extr',config], extr_array[,'amp',config], \n         extr_array[,'extr',config]+extr_array[,'err_extr',config], extr_array[,'amp',config], \n         length=0.02, angle=90, code=3, col='azure4')\n  arrows(extr_array[,'extr',config],extr_array[,'amp',config]-extr_array[,'err_amp',config],\n         extr_array[,'extr',config],extr_array[,'amp',config]+extr_array[,'err_amp',config], \n         length=0.02, angle=90, code=3, col='azure4')\n  \n  points(extr_array[,'extr',config],extr_array[,'amp',config],col=col.list[i],pch=19)\n  if(i>1){\n    segments(extr_array[,'extr',i],extr_array[,'amp',i],\n             extr_array[,'extr',i-1],extr_array[,'amp',i-1],\n             lty=3,lwd=0.8)\n  }\n}\n\ntext(extr_array[,'extr','Ndyn'],extr_array[,'amp','Ndyn'],\n     label=c(1:10),pos=1,cex=1.2)\n\nmtext('RMSE between simulated and observed 25%\n      extreme tree-ring width regardless of year (mm/yr)',2,line=2.2,cex=1.1)\nmtext('RMSE between simulated and observed \n      tree-ring width at years with extreme growth (scaled)',1,line=3.5,cex=1.1)\nmtext(expression(bold('Extreme growth events')),3,cex=1.2,line=0.4)\n\n\n## To save figure\ndev.off()\n\n\n\n",
    "created" : 1585552996177.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2479296731",
    "id" : "81B0A1D2",
    "lastKnownWriteTime" : 1585487360,
    "last_content_update" : 1585487360,
    "path" : "~/surfdrive/work/J.Jeong_GMD_2020/R/process_benchmark.R",
    "project_path" : "R/process_benchmark.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}